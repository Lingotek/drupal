<?php

/**
 * @file lingotek.module
 * 
 * Implements Drupal-related hooks for the Lingotek Translation module.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\lingotek\Lingotek;
use Drupal\lingotek\LingotekTranslatableEntity;

/**
 * Implements hook_permission().
 */
function lingotek_permission() {
  return array(
    'administer lingotek' => array(
      'title' => t('Administer Lingotek'),
      'description' => t('Access the administrative settings for the module.')
    ),
    'translation' => array(
      'title' => t('Translate'),
      'description' => t('Access to the translate content (e.g., the "Translations" tab will be available on nodes, comments will be translatable)')
    ),
    'manage projects' => array(
      'title' => t('Project Management'),
      'description' => t('Access the Lingotek tab on content types (Must also have permission to edit the content type in question).')
    ),
    'use lingotek developer tools' => array(
      'title' => t('Developer'),
      'description' => t('Access developer tools useful for detailed information and debugging')
    ),
  );
}

/**
 * Implements hook_toolbar().
 */
function lingotek_toolbar() {
  $items = array();
  $items['translation'] = array(
    '#type' => 'toolbar_item',
    '#attached' => array(
      'library' => array(
        'lingotek/lingotek.icons',
      ),
    ),
  );
  return $items;
}

/**
 * Implements hook_entity_create().
 */
function lingotek_entity_create(EntityInterface $entity) {
  // Only act on content entities.
  if (!($entity instanceof ContentEntityInterface)) {
    return;
  }
}

/**
 * Implements hook_entity_update().
 */
function lingotek_entity_update(EntityInterface $entity) {
  // Only act on content entities.
  if (!($entity instanceof ContentEntityInterface)) {
    return;
  }
}

/**
 * Implements hook_entity_delete().
 */
function lingotek_entity_delete(EntityInterface $entity) {
  // Only act on content entities.
  if (!($entity instanceof ContentEntityInterface)) {
    return;
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function lingotek_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $container = \Drupal::getContainer();
  $L = $container->get('lingotek');
  $profiles = $L->get('profile');
  $entity = $form_state->getFormObject()->getEntity();
  $lte = LingotekTranslatableEntity::load($container, $entity);
  $default_profile  = Lingotek::PROFILE_AUTOMATIC;
  $options = array();

  // Use the entity's profile if set, else use the content type's profile
  $entity_profile = $lte->getProfile();
  if ($entity_profile != NULL) {
    $default_profile = $entity_profile;
  }
  else {
    if ($entity->getType() === 'article') {
      $default_profile = $L->get('translate.entity.node.article');
    }
    elseif ($entity->getType() === 'page') {
      $default_profile = $L->get('translate.entity.node.page');
    }
  }

  foreach ($profiles as $profile) {
    $options[$profile['id']] = ucwords($profile['name']);
  }
  
  $form['lingotek_translation_management'] = array(
    '#type' => 'details',
    '#title' => t('Translation Management'),
    '#description' => t('The Lingotek Translation module was developed to help you translate your site. The module integrates the Lingotek translation management system directly into Drupal, so that your users can leverage the power of Lingotek\'s translation tools and services without ever having to leave the comfort of your Drupal environment.'),
    '#group' => 'advanced',
  );

  $form['lingotek_translation_management']['lingotek_translation_profile'] = array(
    '#type' => 'select',
    '#title' => t('Translation Profile'),
    '#options' => $options,
    '#default_value' => $default_profile,
  );

  foreach (array_keys($form['actions']) as $action) {
    if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
      $form['actions'][$action]['#submit'][] = 'lingotek_form_node_form_submit';
    }
  }
}

function lingotek_form_node_form_submit ($form, FormStateInterface $form_state) {
  $form_values = $form_state->getValues();
  $container = \Drupal::getContainer();
  $L = $container->get('lingotek');
  $entity = $form_state->getFormObject()->getEntity();
  $lte = LingotekTranslatableEntity::load($container, $entity);
  $lte->setProfile($form_values['lingotek_translation_profile']);
  $lte->setSourceStatus(Lingotek::STATUS_EDITED);
}

/**
 * Iplements hook_contextual_links_view_alter
 */
function lingotek_contextual_links_view_alter(&$element, $items) {
  // TODO
}

