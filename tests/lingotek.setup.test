<?php

class LingotekTestCase extends TranslationTestCase {

  public $admin_user;

  public static function getInfo() {
    return array(
      'name' => 'Lingotek Basic',
      'description' => 'Ensure that Lingotek functions properly.',
      'group' => 'Lingotek',
    );
  }

  public function setUp() {
    parent::setUp();
    module_enable(array('lingotek'), TRUE);
    $this->resetAll();

    $perm = array_keys(lingotek_permission());
    $perm[] = 'create article content';
    $perm[] = 'edit own article content';
    $perm[] = 'delete own article content';
    
    $this->admin_user = $this->drupalCreateUser($perm);
  }

  public function testEnterpriseSetup() {
    $this->drupalGet('admin/config/lingotek/setup');
    $this->assertResponse(403, 'Only allow access to users with permissions');

    $this->drupalLogin($this->admin_user);

    $this->drupalGet('admin/config/lingotek/setup');
    $this->assertUrl('admin/config/lingotek/new-account', array(), 'Redirect to first step of start page');

    //1: Account Settings
    $settings = array(
      'lingotek_lid' => 'thansen_enterprise',
      'lingotek_pid' => 'lingotek',
    );
    debug($settings);
    $this->drupalPost('admin/config/lingotek/account-settings', $settings, 'Next');
    $this->assertText('Your account settings have been saved.', '<b>Step 1: Account Settings - Abililty to login</b>');
    
    
    //2: *TODO* TM Vault
    
    $settings = array(
      'lingotek_site_project' => $this->getFirstOption($this->xpath($this->constructFieldXpath('name','lingotek_site_project'))),
      'lingotek_site_workflow' => $this->getFirstOption($this->xpath($this->constructFieldXpath('name','lingotek_site_workflow'))),
      'lingotek_site_vault' => '1',
    );
    debug($settings);
    $this->drupalPost(NULL, $settings, 'Next');   
    $this->assertText('Your Lingotek project, workflow, and vault selections have been saved.', 'Step 2: Community Selection');
    
    //3: Source Language
    $this->drupalPost(NULL,  array(), 'Next');   
    $this->assertText('Your language settings have been saved.', 'Step 3: Source Language');
    
    //4: Default Language Switcher
    $this->drupalPost(NULL,  array(), 'Next');
    $this->assertText('The default language switcher is now enabled.', 'Step 4: Default Language Switcher');
    
    //5: Content
    $settings = array(
      'lingotek_nodes_translation_method' => 'field',
    );
    $this->drupalPost(NULL, $settings, 'Next');
    $this->assertText('The configuration options have been saved.', 'Step 5: Content');
 
    //6: Comments
    $this->drupalPost(NULL, array(), 'Next');
    $this->assertText('The configuration options have been saved.', 'Step 6: Content');
    
    //7: Config + Bulk Operations
    $this->drupalPost(NULL, array(), 'Save');
    $this->assertText('You have completed setup successfully!', 'Step 7: Config + Bulk Operations');
    
    $settings = array(
      'lingotek_oauth_consumer_id' => '345',
      'lingotek_oauth_consumer_secret' => '345',
    );
    $this->drupalPost('admin/config/regional/lingotek/settings', $settings, 'Save');
    $this->assertText('The configuration options have been saved.', 'Set OAuth Keys');
    
    
//    $this->addLanguage('es');
//    $this->addLanguage('de');
    

//    $settings = array(
//      'type' => 'article',
//    );
//    $n = $this->drupalCreateNode($settings);
//    debug($n);
    
    $settings = array(
      'title_field[und][0][value]' => 'Hello',
      'body[und][0][value]' => 'World',
    );
    $this->drupalPost('node/add/article', $settings, 'Save');
    
    $url_parts = explode('/', $this->getUrl());
    $nid = array_pop($url_parts);
    $n = node_load($nid);
    debug($nid);
    
    
    $status = lingotek_lingonode($n->nid, 'node_sync_status');
    debug($status);
    $this->assertEqual($status, LingotekSync::STATUS_CURRENT, 'NODE_SYNC_STATES set correctly');
    
    $doc_id = lingotek_lingonode($n->nid, 'document_id');
    debug($doc_id);
    $this->assertNotEqual($doc_id, 0);
    
    sleep(1);
    
    $this->drupalGet('node/' . $n->nid . '/lingotek_pm');
    $this->assertNoText('Upload');
    $this->assertText('Download Translations');
    
//    lingotek_download_document($n, $lingotek_locale);
    
//    $_GET['doc_id'] = lingotek_lingonode($n->nid, 'document_id');
//    lingotek_notifications()
    
    
    
  }
  
  public function testProSetup() {
    debug('Beginning Pro Setup');
    return;
    
    
    $this->drupalGet('admin/config/lingotek/setup');
    $this->assertResponse(403, 'Only allow access to users with permissions');

    $this->drupalLogin($this->admin_user);

    $this->drupalGet('admin/config/lingotek/setup');
    $this->assertUrl('admin/config/lingotek/new-account', array(), 'Redirect to first step of start page');

    //1: Account Settings
    $settings = array(
      'first_name' => 'Automated Tester',
      'last_name' => 'Code Tester',
      'email' => 'test@example.com',
    );
    debug($settings);
    $this->drupalPost(NULL, $settings, 'Next');
    $this->assertText('Your new Lingotek account has been setup.', '<b>Step 1: Account Settings - Abililty to create account</b>');
    $this->assertText('Source language', '<b>Step 1: Account Settings - Redirect to next page</b>');
    
    
    //3: Source Language
    $this->drupalPost(NULL,  array(), 'Next');   
    $this->assertText('Your language settings have been saved.', 'Step 3: Source Language');
    
    //4: Default Language Switcher
    $this->drupalPost(NULL,  array(), 'Next');
    $this->assertText('The default language switcher is now enabled.', 'Step 4: Default Language Switcher');
    
    //5: Content
    $settings = array(
      'lingotek_nodes_translation_method' => 'field',
    );
    $this->drupalPost(NULL, $settings, 'Next');
    $this->assertText('The configuration options have been saved.', 'Step 5: Content');
    $this->assertText('Translate Comments', 'Step 5: Content - Redirect to next page');
 
    //6: Comments
    $this->drupalPost(NULL, array(), 'Next');
    $this->assertText('The configuration options have been saved.', 'Step 6: Comments');
    $this->assertText('Configuration Translation ', 'Step 6: Comments - Redirect to next page');
    
    //7: Config + Bulk Operations
    $this->drupalPost(NULL, array(), 'Save');
    $this->assertText('You have completed setup successfully!', 'Step 7: Config + Bulk Operations');
    
    $settings = array(
      'lingotek_oauth_consumer_id' => '345',
      'lingotek_oauth_consumer_secret' => '345',
    );
    $this->drupalPost('admin/config/regional/lingotek/settings', $settings, 'Save');
    $this->assertText('The configuration options have been saved.', 'Set OAuth Keys');
    
  }
  
//  public testNodes() {
//    $n = $this->drupalCreateNode();
//    
//    sleep(2);
//    $_GET['doc_id'] = lingotek_lingonode($n->nid, 'document_id');
//    lingotek_notifications()
//  }
  
  function getFirstOption($element) {
//    debug((string)$element[0]->option[1]);
    $str = '';
    
    $option = $element[0]->option[1];
    if(!empty($option)) {
      $str = (string) $option->attributes()['value'];
    }
    
    return $str;
  }

}