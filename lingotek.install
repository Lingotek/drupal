<?php
/**
 * @file
 * Installation for Lingotek Community Translation Module
 */

/*
 * Install the Lingotek module
 */
function lingotek_install() {
  db_update('system')->fields(array('weight' => 3))->condition('name', 'lingotek')->execute();

  //TODO Add documents to Lingotek for all existing nodes

}

/*
 * Uninstall the Lingotek module
 */
function lingotek_uninstall() {
  //variable_del('lingotek_community');

}

/*
 * Install the database schema for the Lingotek module
 */
function lingotek_schema() {
  $schema['lingotek'] = array
  (
    'description' => 'Table for storing node related data.',
    'fields' => array
    (
      'nid' => array
      (
        'description' => 'The primary identifier for a node',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'lingokey' => array
      (
        'description' => 'Key in key/value pairs',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'lingovalue' => array
      (
        'description' => 'Value of the specified key',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array
    (
      'nid',
      'lingokey',
    ),
  );
  $schema['lingotek_mt_queue'] = array
  (
    'description' => 'Table for storing a Machine Translation queue.',
    'fields' => array
    (
      'uid' => array
      (
        'description' => 'The primary identifier for a user.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array
      (
        'description' => 'The primary identifier for a node.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'language' => array
      (
        'description' => 'Language to machine translate',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'engine' => array
      (
        'description' => 'Engine used to machine translate',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
  );
  return $schema;
}

/*
 * Update
 * 1. Create the mt-queue
 * 2. delete the reference variable that was stored in lingotek_languages
 */
function lingotek_update_7200(&$sandbox) {
	drupal_load('module', 'lingotek');

  if (!isset($sandbox['progress'])){
		$result = db_select('lingotek', 'n')->distinct(True)->fields('n', array(db_escape_field('nid')))->execute();
		$nodes = array();
		foreach ($result as $row) {
			array_push($nodes, $row->nid);
		}

    $sandbox['progress'] = 0;
    $sandbox['max'] = count($nodes);
    $sandbox['nodes'] = $nodes;
  }
	$node = node_load($sandbox['nodes'][$sandbox['progress']]);
	if ($node !== False) {
		lingotek_update_document($node);
	}

	$sandbox['progress']++;
  $sandbox['#finished'] = empty($sandbox['max']) ? 1 : ($sandbox['progress'] / $sandbox['max']);
  if ($sandbox['#finished'] == 1) {
  	lingotek_analyze_project();
  }
}

/**
 * Save per-node Lingotek project associations for all existing content.
 */
function lingotek_update_7201(&$sandbox) {
  $lingotek_nodes = array();
  $default_lingotek_project = variable_get('lingotek_project', 0);

  if ($default_lingotek_project) {
    if (!isset($sandbox['progress'])) {
      $result = db_select('lingotek', 'l')
        ->distinct(TRUE)
        ->fields('l', array('nid'))
        ->execute();
    
      foreach ($result as $row) {
        $lingotek_nodes[] = $row->nid;
      }
    
      $sandbox['progress'] = 0;
      $sandbox['max'] = count($lingotek_nodes);
      $sandbox['nodes'] = $lingotek_nodes;
    }
    
    $process_node = node_load(array_shift($sandbox['nodes']));
    if ($process_node->nid && !lingotek_lingonode($process_node->nid, 'project_id')) {
      lingotek_lingonode($process_node->nid, 'project_id', $default_lingotek_project);
    }
    $sandbox['progress'] = (int) (count($sandbox['nodes']) / $sandbox['max']);
  }

  $sandbox['#finished'] = empty($sandbox['nodes']);
}