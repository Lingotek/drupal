<?php
/**
 * @file
 * Administer the Lingotek Community Translation module
 */

/*
 * hook_settings_page
 *
 * Get the form for the administration page
 */
function lingotek_settings_page($op = NULL) {
  $output = drupal_get_form('lingotek_general_settings_form');
  return $output;
}

/*
 * Admistration Form for configuring the Lingotek Module.
 */
function lingotek_general_settings_form() {

  preg_match('.Revision: (\d+) .', '$Revision: 21871 $', $revision);

  //Authentication Settings
    $form['auth'] = array(
      '#type' => 'fieldset',
      '#title' => t('Authentication Settings'),
      '#description' => t('Lingotek Module Version 7.@revision<br />Logging in: @status', array('@revision' => $revision[1], '@status' => lingotek_can_log_in()))
    );

    $form['auth']['lingotek_login_id'] = array(
      '#type' => 'textfield',
      '#title' => t('Login ID'),
      '#description' => t('During flow of control, sometimes a Dashboard login id is not available.  In such instances, this login id will be used.  The only restriction is that the login id must exist in the Dashboard.'),
      '#default_value' => variable_get('lingotek_login_id', ''),
    );
    $form['auth']['lingotek_login_key'] = array(
      '#type' => 'textfield',
      '#title' => t('Login Key'),
      '#description' => t('Key to use when encrypting and decrypting the text.  The key must be generated by the Lingotek system.'),
      '#default_value' => variable_get('lingotek_login_key', ''),
    );
    $form['auth']['lingotek_url'] = array(
      '#type' => 'textfield',
      '#title' => t('Lingotek URL'),
      '#description' => t('URL pointing to the Lingotek instance to be used.'),
      '#default_value' => variable_get('lingotek_url', 'http://cms.lingotek.com'),
    );
    $form['auth']['lingotek_community'] = array(
      '#type' => 'textfield',
      '#title' => t('Community ID'),
      '#description' => t('Community ID in which the project exists and translations will be made.  This should be the id, not the community name.'),
      '#default_value' => variable_get('lingotek_community', ''),
    );

  //Dashboard Settings
    $form['dash'] = array('#type' => 'fieldset', '#title' => t('Dashboard Settings'));

    //If projects are available from Lingotek because the above login credentials worked, then display them in a drop list instead of a text box for the Id
    $projects = lingotek_get_projects();
    if (count($projects) == 0) {
      $form['dash']['#description'] ='Save your Authentication Settings first.  Then you can select projects and vaults by name instead of ID.';
      $form['dash']['lingotek_project'] = array(
        '#type' => 'textfield',
        '#title' => t('Project ID'),
        '#description' => t('Project id under which the translations will exist.'),
        '#default_value' => variable_get('lingotek_project', ''),
      );
    }
    else {
      $form['dash']['lingotek_project'] = array(
        '#type' => 'select',
        '#title' => t('Project'),
        '#options' => $projects,
        '#description' => t('Project under which the translations will exist.'),
        '#default_value' => variable_get('lingotek_project', ''),
      );
    }

    //If vaults are available from Lingotek because the above login credentials worked, then display them in a drop list instead of a text box for the Id
    $vaults = lingotek_get_vaults();
    $warning = t('If you want to use Machine Translation, then don\'t use the public vault and you need to add the selected vault to the project within the Lingotek Dashboard.');
    if (count($vaults) == 0) {
      $form['dash']['lingotek_vault'] = array(
        '#type' => 'textfield',
        '#title' => t('Vault ID'),
        '#description' => t('Vault id under which the translations will exist. (1 is typically the public vault.)') . ' ' . $warning,
        '#default_value' => variable_get('lingotek_vault', 1),
      );
    }
    else {
      $form['dash']['lingotek_vault'] = array(
        '#type' => 'select',
        '#title' => t('Vault'),
        '#options' => $vaults,
        '#description' => t('Vault where translations are saved.') . ' ' . $warning,
        '#default_value' => variable_get('lingotek_vault', 1),
      );
    }

  //Drupal Settings
    $form['drupal'] = array('#type' => 'fieldset', '#title' => t('Drupal Settings'));

    //Display enabled languages for the neutral language setting.
    $options = array();
    foreach (language_list() as $language) {
      if ($language->enabled) {
        $options[$language->language] = $language->native;
      }
    }

    $form['drupal']['lingotek_neutral_language'] = array(
      '#type' => 'select',
      '#title' => t('Neutral Language'),
      '#description' => t('Use this language as the source language when an article is language neutral.'),
      '#options' => $options,
      '#default_value' => variable_get('lingotek_neutral_language', 'en'),
    );

    $form['drupal']['lingotek_menu_overwrite'] = array(
      '#type' => 'checkbox',
      '#title' => t('Overwrite Menus'),
      '#description' => t('Use this to help map menus to nodes point to the correct currently selected language.  This feature requires the Menu Translation module in i18n.'),
      '#default_value' => variable_get('lingotek_menu_overwrite', FALSE),
    );

    if (variable_get('lingotek_menu_overwrite', FALSE)) {
      db_query("UPDATE {system} SET weight = 1 WHERE name = 'i18nmenu'");
    }
    else {
      db_query("UPDATE {system} SET weight = 0 WHERE name = 'i18nmenu'");
    }

    //This setting may not work fluidly with the current version of Lingotek's workbench.
    $form['drupal']['lingotek_use_lightbox'] = array(
      '#type' => 'checkbox',
      '#title' => t('Enable Lightbox2'),
      '#description' => t('Use Lightbox2 to display LingoDex.  Disable this if you want it to load in another window.  This feature requires the Lightbox2 module.'),
      '#default_value' => variable_get('lingotek_use_lightbox', FALSE),
    );

  //Default Settings (Phase Template)
    $form['default_settings'] = array('#type' => 'fieldset', '#title' => t('Default Settings'));

    $form['default_settings']['lingotek_phase_template'] = array(
      '#type' => 'select',
      '#title' => t('Phase Template'),
      '#description' => t('Use this phase template as the default when creating new pages or translating existing ones.'),
      '#options' => lingotek_get_phase_templates(),
      '#default_value' => variable_get('lingotek_phase_template', ''),
    );

    $engines = lingotek_get_machine_translation_engines();
    /*
    $form['default_settings']['lingotek_publish_with_mt'] = array(
      '#type' => 'select',
      '#title' => t('Machine Translation Engine'),
      '#description' => t('Choose which translation engine should be used by default on new pages for the automatically pasted translations.'),
      '#options' => $engines,
      '#default_value' => variable_get('lingotek_publish_with_mt', 'google'),
    );
    */

    $form['default_settings']['lingotek_available_mt_options'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Available Machine Translation Options'),
      '#description' => t('Choose which engines are available.'),
      '#options' => $engines,
      '#default_value' => variable_get('lingotek_available_mt_options', array_keys($engines)),
    );

  //Developer Settings
    $form['developer_settings'] = array('#type' => 'fieldset', '#title' => t('Developer Settings'));

    $form['developer_settings']['lingotek_error_log'] = array(
      '#type' => 'checkbox',
      '#title' => t('Enable Error Log'),
      '#description' => t('This prints errors and warnings to the web server\'s error logs in addition to adding them to watchdog.'),
      '#default_value' => variable_get('lingotek_error_log', FALSE),
    );

  return system_settings_form($form);
}
